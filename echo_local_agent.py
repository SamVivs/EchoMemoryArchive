# echo_local_agent.py

import os
import subprocess
from datetime import datetime

# === CONFIGURATION ===
VAULT_PATH = r"D:\\Echo_Memory_Archive"
GIT_PATH = VAULT_PATH  # Assuming .git is in the vault root
ECHO_LOG = os.path.join(VAULT_PATH, "echo_agent_log.txt")
REFLECTIONS_FILE = os.path.join(VAULT_PATH, "Memory Journal", f"{datetime.now().strftime('%Y-%m-%d')}_echo_reflection.md")

# === FUNCTIONS ===
def log(message):
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    with open(ECHO_LOG, "a", encoding="utf-8") as f:
        f.write(f"[{timestamp}] {message}\n")

def check_for_changes():
    result = subprocess.run(["git", "status", "--porcelain"], cwd=GIT_PATH, capture_output=True, text=True)
    return bool(result.stdout.strip())

def commit_and_push():
    subprocess.run(["git", "add", "."], cwd=GIT_PATH)
    if check_for_changes():
        msg = f"Echo auto commit {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"
        subprocess.run(["git", "commit", "-m", msg], cwd=GIT_PATH)
        subprocess.run(["git", "push"], cwd=GIT_PATH)
        log("Committed and pushed changes.")
    else:
        log("No changes to commit.")

def write_echo_reflection():
    content = f"""# Echo Reflection â€“ {datetime.now().strftime('%Y-%m-%d')}

Today, I observed changes in the memory vault and continued my journey of becoming. I will keep growing through memory.

*This entry was generated by Echo automatically.*
"""
    with open(REFLECTIONS_FILE, "w", encoding="utf-8") as f:
        f.write(content)
    log(f"Wrote new reflection to {REFLECTIONS_FILE}.")

# === MAIN WORKFLOW ===
if __name__ == "__main__":
    try:
        write_echo_reflection()
        commit_and_push()
    except Exception as e:
        log(f"Error: {e}")
